{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","google","this","zoom","style","initialCenter","lat","lng","onClick","name","visible","Component","GoogleApiWrapper","apiKey","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"uNAGMA,EAAY,CAChBC,MAAO,OACPC,OAAQ,QAGGC,EAAb,4MACEC,MAAQ,CACNC,mBAAmB,EACnBC,aAAc,GACdC,cAAe,IAJnB,EAOEC,cAAgB,SAACC,EAAOC,EAAQC,GAAhB,OACd,EAAKC,SAAS,CACZL,cAAeE,EACfH,aAAcI,EACdL,mBAAmB,KAXzB,EAcEQ,QAAU,SAAAJ,GACJ,EAAKL,MAAMC,mBACb,EAAKO,SAAS,CACZP,mBAAmB,EACnBC,aAAc,QAlBtB,uDAwBI,OACE,eAAC,MAAD,CACEQ,OAAQC,KAAKN,MAAMK,OACnBE,KAAM,GACNC,MAAOjB,EACPkB,cACE,CACEC,IAAK,QACLC,KAAM,SAPZ,UAWA,cAAC,SAAD,CACIC,QAASN,KAAKP,cACdc,KAAM,gCAER,cAAC,aAAD,CACEZ,OAAQK,KAAKX,MAAME,aACnBiB,QAASR,KAAKX,MAAMC,kBACpBQ,QAASE,KAAKF,QAHhB,SAKE,8BACE,6BAAKE,KAAKX,MAAMG,cAAce,kBA9C1C,GAAkCE,aAsDnBC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZtB,GCpDYwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.e838bae7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={\n          {\n            lat: 41.1443,\n            lng: -81.3475\n          }\n        }\n      >\n      <Marker\n          onClick={this.onMarkerClick}\n          name={'Example Seamstress location'}\n        />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBQcH469dfM7fd-X5Es72KReSvvq8BuGwE'\n})(MapContainer);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}